= link_to 'Edit', edit_user_customer_path(@customer)
|  | 
= link_to 'Back', user_customers_path
.row-fluid
  h3
    | Company Details For 
    = @customer.company_name
.row-fluid
  .span6
    p
      strong Contact Information
      br
      = @customer.poc_name
      br
      = link_to @customer.email, "mailto:#{@customer.email}"
      br
      | Tel: 
      = @customer.phone_number
  .span6
    p
      strong Delivery Address
      br
      = @customer.address_one
      - if @customer.address_two != ""
        br
      = @customer.address_two unless @customer.address_two == ""
      br
      = "#{@customer.city}, #{@customer.state} #{@customer.postal_code}"
.row-fluid
  p
    strong Terms: 
    = @customer.term
  p
    strong Assigned Delivery Times:
    ul
      - @customer.delivery_slots.each do |slot|
        li =slot.delivery_label
  p
    strong Notes:
    p
      = @customer.note
  
.row-fluid
  a.btn.btn-success href="#{@customer.id}/orders/new" Create New Order For Customer

- if @customer.orders.any?
  hr
  .row-fluid
    h4 Order History
  .row-fluid
    table.table.table-striped
      thead
        tr
          th Order #
          th Order Date and Time
          th Status
          th Amount
          th
      tbody
        - @customer.orders.each do |order|
          tr
            td= link_to order.id, user_order_path(current_user, order)
            td= time_tag order.created_at
            td= order.status
            td= number_with_precision order.total, precision:2
            td
              = link_to "Edit", edit_user_order_path(current_user, order), class: "btn btn-mini"
- if @customer.payment_dues.any?
  hr
  .row-fluid
    h4 Invoices
  .row-fluid
    table.table.table-striped
      thead
        tr
          th Invoice #
          th Order #
          th Amount Due
          th Status
      tbody
        - @customer.payment_dues.each do |invoice|
          tr
            td= link_to invoice.id, user_invoice_path(current_user, invoice)
            td= invoice.order_id
            td= number_with_precision invoice.amount, precision:2
            td= invoice.status





