= semantic_form_for [current_user, @order] do |f|
  - if @order.errors.any?
    .row-fluid
      #error_explanation
        h2 = "#{pluralize(@order.errors.count, "error")} prohibited this order from being saved:"
        ul
          - @order.errors.full_messages.each do |message|
            li = message

  
  .row-fluid
    .span4
      = f.input :customer_company, :label=> "Company Name", :as => :autocomplete,
        :url => autocomplete_customer_company_name_user_orders_path, 
        :input_html => { class: "span4", id_element: "#order_customer_id", update_elements: {}} 
      = f.input :customer_id, :as => :hidden,
        :input_html => { :name => "order[customer_id]" }
      
    .span4
      #customer-details style="display:none"
      
    .span4
      #customer-notes style="display:none"
  hr
  
  .row-fluid
    h4 Order Details
    table.table.table-bordered#order-table
      tr
        th 
        th Assigned Delivery Slot
        th Item
        th List Price
        th Customer Price
        th Qty
        th Amount
        th
      = f.semantic_fields_for :line_items do |line_item|
        = render 'line_item_fields', :f => line_item
      .links
        h5
          = link_to_add_association '+ Add Line Item', f, :line_items
  .row-fluid
    = f.action :submit, :label => 'Save', :button_html => { class: "btn btn-success" }
  hr
  .row-fluid
    h4 Order Summary
    table.table.table-bordered
      tr
        th Order Total
        th
          = f.input :total, :label => false, :input_html => { readonly: true, value: 0, class: "order-total"}

javascript:

  $("input[type=checkbox]").hide();
  if ($('#order_customer_id').val() != "") {
    var customer_id = $('#order_customer_id').val();
    $.getJSON("/users/#{current_user.id}/customers/" + customer_id, function(data){
      $('#order_customer_company').val(data.company_name);
      var customer_html = "<strong>Contact name: </strong>" + data.poc_name + "<br /><strong>Phone Number: </strong>"+data.phone_number+"<br /><strong>Delivery Address:</strong><br />"+data.address_one+"<br />"+data.address_two+"<br />"+data.city+", "+data.state+" "+data.postal_code+"</div>";
    $('#customer-details').html(customer_html);
    $('#customer-notes').html("<strong>Customer Notes: </strong>"+data.note);
    $('#customer-details').show();
    $('#customer-notes').show();
    });  
  }
  $("a.add_fields").data("association-insertion-node", '#order-table');
  $("a.add_fields").data("association-insertion-method", 'append');
  $('#order_customer_company').bind('railsAutocomplete.select', function(event, data){
    var customer_html = "<strong>Contact name: </strong>" + data.item.poc_name + "<br /><strong>Phone Number: </strong>"+data.item.phone_number+"<br /><strong>Delivery Address:</strong><br />"+data.item.address_one+"<br />"+data.item.address_two+"<br />"+data.item.city+", "+data.item.state+" "+data.item.postal_code+"</div>";
    $('#customer-details').html(customer_html);
    $('#customer-notes').html("<strong>Customer Notes: </strong>"+data.item.note);
    $('#customer-details').show();
    $('#customer-notes').show();
  }); 

  
  $('#order-table').bind('cocoon:after-remove', function(e, removedItem) {
    calculateOrderTotal();
  });  
  $('#order-table').bind('cocoon:after-insert', function(e, removedItem) {
    $("input[type=checkbox]").hide();
  });

  var calculateOrderTotal = function(){
    var total = 0;
    $("#order-table .nested-fields .order_price").each(function(){
      total += parseFloat($(this).text());
    });
    $(".order-total").val(total.toFixed(2));
  }

