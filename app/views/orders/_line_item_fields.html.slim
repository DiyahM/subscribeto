tr.nested-fields
  = f.inputs do
    td
      = f.input :delivered, :label => '', :as => :boolean, :input_html => { class:"delivered"}
    td
      = f.input :delivery_slot_id, :label => false, :as => :select,
        :collection => Hash[current_user.delivery_slots.map{|b| [b.delivery_label,b.id]}], :include_blank => "Select Time"
    td
      = f.input :item_id, :label => false, :as => :select,
        :collection => Item.prepared_goods(current_user.id), input_html: { class: "order_item" },
        :include_blank => "Select Item"
    td.order_list_price
      | --
    td 
      = f.input :price, :label => false, input_html: { class: "order_customer_price" }
    td
      = f.input :quantity, :label => false, input_html: { class: "order_quantity", min: "1"}
    td.quantity-edits
      = f.input :qty_delivered, :label => false, input_html: { style:"display:none", class:"order-options order-delivered",
        min:"0"}
    td.quantity-edits 
      = f.input :qty_returned, :label => false, input_html: { style:"display:none", class:"order-options order-returned",
        min:"0"}
    td.order_price
      | --
    td
      = link_to_remove_association "Remove Line Item", f

javascript:
  $(".delivered").change(function() {
    var item_id = $(this).val();
    var item_element = $(this).parents("tr");
    if (item_element.find(".delivered").is(":checked"))
    {
      item_element.find(":hidden").show();
      item_element.find(".order_quantity").attr('readonly', true);
    } else {
      item_element.find(".order-options").hide();
      item_element.find(".order_quantity").attr('readonly', false);
    }
  });
  $(".order_item").change(function() {
    var item_id = $(this).val();
    var item_element = $(this).parents("tr");
    $.getJSON("/items/"+item_id, function(data){
      item_element.children(".order_list_price").html("$"+data.price);
      item_element.find(".order_customer_price").val(data.price);
      var total = parseInt(item_element.find(".order_quantity").val()) * parseFloat(data.price);
      item_element.find(".order_price").html(total);
      calculateOrderTotal();
    });
  });

  $(".order_quantity").change(function() {
    var item_element = $(this).parents("tr");
    var total = parseInt(item_element.find(".order_quantity").val()) * parseFloat(item_element.find(".order_customer_price").val());
    item_element.find(".order_price").html(total);
    calculateOrderTotal();
  });

  $(".order-options").change(function() {
    var item_element = $(this).parents("tr");
    var total = parseInt((item_element.find(".order-delivered").val() - item_element.find(".order-returned").val()) * parseFloat(item_element.find(".order_customer_price").val()));
    item_element.find(".order_price").html(total);
    calculateOrderTotal();
  });

  $(".order_customer_price").change(function() {
    var item_element = $(this).parents("tr");
    var total = parseInt(item_element.find(".order_quantity").val()) * parseFloat(item_element.find(".order_customer_price").val());
    item_element.find(".order_price").html(total);
    calculateOrderTotal();
  });

  
