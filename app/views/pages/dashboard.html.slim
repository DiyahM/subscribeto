.row-fluid
  #dashboard-header
    .span7
      #{time_tag @weekly_schedule.week_start.localtime, format: "%b %d"} - #{time_tag @weekly_schedule.end_of_week, format: "%b %d"}
    .span5.pull-right
      = form_tag dashboard_path, :method => "get" do
        = text_field_tag :datepicker,"", placeholder:"Select new week", class:"input-medium"
        = submit_tag("Change Week", class: "btn", style:"vertical-align:top;margin-left:3px")

#main style="margin-top:50px;"

  #nav-buttons
    center
      .btn-group
        button.btn.btn-large.btn-info#edit-btn onclick="showEditSchedule();" Update Orders
        button.btn.btn-large#invoice-btn onclick="showInvoices();" Send Invoices 
        button.btn.btn-large#view-btn onclick="showSchedule();" Summary Report

  #edit-schedule style="margin-top:20px"


    p
      em
        | Update order quantities in the table below and click 'Save'
    = semantic_form_for [current_user, @weekly_schedule] do |f|
      = f.input :week_start, :as => :hidden
      table.table.table-bordered
        thead
          tr
            th
            - current_user.items.each do |item|
              th = item.name
        tbody
          = f.semantic_fields_for :delivery_dates do |delivery_date|
            = delivery_date.input :scheduled_for, :as => :hidden
            = delivery_date.input :delivery_slot_id, :as => :hidden
            - if delivery_date.object.delivery_details.any?
              tr
                td colspan=current_user.items.count+1
                  strong
                    = delivery_date.object.delivery_slot.delivery_label
                    = time_tag delivery_date.object.scheduled_for, format: " %m/%d"
              = delivery_date.semantic_fields_for :delivery_details do |delivery_detail|
                = delivery_detail.input :customer_id, :as => :hidden
                tr 
                  td width="15%" = delivery_detail.object.customer.company_name
                  = delivery_detail.semantic_fields_for :order_quantities do |order_quantity|
                    = order_quantity.input :item_id, :as => :hidden
                    td
                      //= order_quantity.object.item.name
                      .span4
                        = order_quantity.input :quantity, label: false,
                          input_html: { min:"0", class:order_quantity.object.item.name }
      = f.submit "Save", class: "btn btn-success btn-large pull-right"
  #invoice style="display:none;margin-top:20px;"
    - if @weekly_schedule.new_record?
      p
        center
          .alert.alert-error
            h4 Please click 'Update Orders' button above and click 'Save' before sending invoices
    - else
      table.table.table-bordered
        thead
          tr
            th Customer
            th Total Amount Due (for this week's period)
            th Invoice Memo
            th Actions
        tbody
          - @weekly_schedule.invoices.each do |invoice|
            tr
              td = invoice.customer.company_name
              td = "$#{number_with_precision(invoice.amount_due, precision:2)}"
              td
                input.invoice-id-input type="hidden" value=invoice.id
                input.invoice-memo type="text" value=invoice.memo
              td
                a.btn.btn-mini.btn-space target="blank" href=user_invoices_pdf_url(current_user, invoice, format: "pdf") View Invoice as PDF
                a.btn.btn-mini href="#email-modal-#{invoice.id}" role="button" data-toggle="modal" Email Invoice
    - @weekly_schedule.invoices.each do |invoice|
      div id="email-modal-#{invoice.id}" class="modal hide fade"
        .modal-header
          button.close type="button" data-dismiss="modal" aria-hidden="true" x
          h3 Email Invoice
        .modal-body
          = form_tag email_invoice_path(invoice), method: "post", id:"#email-form" do       
            = label_tag :to_email, "To:"
            = email_field_tag :to_email, "#{invoice.customer.email}"
            = label_tag :from_email, "From:"
            = email_field_tag :from_email, "#{current_user.email}", readonly: true
            = label_tag :subject
            = text_field_tag :subject, "Invoice for #{invoice.customer.company_name}", class:"input-block-level"
            = label_tag :body, "Message"
            = text_area_tag :body, "Attached you'll find your invoice for your recent order. Thank you for your business!",
              rows:4, class:"input-block-level"
            em
              | *Invoice will be attached as PDF when sent
            br
            .pull-right
              a.btn.btn-space type="button" href="#" data-dismiss="modal" Cancel
              = submit_tag "Send Email", class:"btn btn-primary"
  #view-schedule style="display:none;margin-top:20px;"
    - if @weekly_schedule.new_record?
      p
        center
          .alert.alert-error
            h4 Please click "Update Orders" button and click 'Save' before viewing this week's schedule
    - else
      #summary-table
        .slate.clearfix
          - @weekly_schedule.items.each do |item|
            .stat-column href="#"
              span.number= @weekly_schedule.item_count(item.id)
              span= item.name
      table.table.table-bordered
        thead
          tr
            th
            - current_user.items.each do |item|
              th = item.name
        tbody
          - @weekly_schedule.delivery_dates.each do |delivery_date|
            - if delivery_date.delivery_details.any?
              tr
                td colspan=current_user.items.count+1
                  = delivery_date.delivery_slot.delivery_label
                  = time_tag delivery_date.scheduled_for, format: " %m/%d"
            - delivery_date.delivery_details.each do |delivery_detail|
              tr 
                td width="15%" = delivery_detail.customer.company_name
                - delivery_detail.order_quantities.each do |order_quantity|
                  td
                    = order_quantity.quantity
javascript:
  $('#datepicker').datepicker();

  $('.invoice-memo').change(function(){
    updateInvoice($(this));
  });

  var updateInvoice = function (input) {
    var invoiceId = input.siblings('.invoice-id-input').val();
    var invoiceMemo = input.val();

    $.ajax({
      type: 'POST',
      url: '/invoice/' + invoiceId,
      data: {
           "id": invoiceId,
           "invoice": {
             "memo": invoiceMemo
             }
            },
      async:false
    });
  }

  var showEditSchedule = function(){
    $('#invoice').hide();
    $('#view-schedule').hide();
    $('#edit-schedule').show();
    $('#edit-btn').addClass('btn-info');
    $('#invoice-btn').removeClass('btn-info');
    $('#view-btn').removeClass('btn-info');
  }

  var showInvoices = function() {
    $('#edit-schedule').hide();
    $('#view-schedule').hide();
    $('#invoice').show();
    $('#edit-btn').removeClass('btn-info');
    $('#invoice-btn').addClass('btn-info');
    $('#view-btn').removeClass('btn-info');
  }

  var showSchedule = function(){
    $('#invoice').hide();
    $('#view-schedule').show();
    $('#edit-schedule').hide();
    $('#edit-btn').removeClass('btn-info');
    $('#invoice-btn').removeClass('btn-info');
    $('#view-btn').addClass('btn-info');
  }
  
  if ("#{@show_invoice}") {
    showInvoices();
  }
